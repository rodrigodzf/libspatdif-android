/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libspatdif;

public class spatdiflib_wrapperJNI {
  public final static native long sdTrajectoryHandler_getTrajectoryMap(long jarg1, sdTrajectoryHandler jarg1_);
  public final static native long sdTrajectoryHandler_getTrajectory(long jarg1, sdTrajectoryHandler jarg1_, long jarg2);
  public final static native void sdTrajectoryHandler_setTrajectory(long jarg1, sdTrajectoryHandler jarg1_, long jarg2, long jarg3);
  public final static native long sdTrajectoryHandler_getNumberOfTrajectories(long jarg1, sdTrajectoryHandler jarg1_);
  public final static native long sdTrajectoryHandler_getAllKeys(long jarg1, sdTrajectoryHandler jarg1_);
  public final static native void sdTrajectoryHandler_removeTrajectory(long jarg1, sdTrajectoryHandler jarg1_, long jarg2);
  public final static native void sdTrajectoryHandler_removeAllTrajectories(long jarg1, sdTrajectoryHandler jarg1_);
  public final static native long new_sdTrajectoryHandler();
  public final static native void delete_sdTrajectoryHandler(long jarg1);
  public final static native long sdExtensible_getResponsibleExtension(long jarg1, sdExtensible jarg1_, int jarg2);
  public final static native long new_sdExtensible();
  public final static native void delete_sdExtensible(long jarg1);
  public final static native long intsToString(long jarg1, int jarg2);
  public final static native long intToString(int jarg1);
  public final static native long floatsToString(long jarg1, int jarg2);
  public final static native long floatToString(float jarg1);
  public final static native long floatsToDoubles(long jarg1, long jarg2, int jarg3);
  public final static native long doublesToFloats(long jarg1, long jarg2, int jarg3);
  public final static native long doublesToString(long jarg1, int jarg2);
  public final static native long doubleToString(double jarg1);
  public final static native long boolToString(boolean jarg1);
  public final static native boolean stringToBool(long jarg1);
  public final static native long stringToDoubles(long jarg1, long jarg2, int jarg3);
  public final static native double stringToDouble(long jarg1);
  public final static native long stringToInts(long jarg1, long jarg2, int jarg3);
  public final static native int stringToInt(long jarg1);
  public final static native long extensionToString(int jarg1);
  public final static native int stringToExtension(long jarg1);
  public final static native int getRelevantExtension(int jarg1);
  public final static native long new_sdDate__SWIG_0(boolean jarg1);
  public final static native long new_sdDate__SWIG_1();
  public final static native long new_sdDate__SWIG_2(int jarg1, int jarg2, int jarg3);
  public final static native long new_sdDate__SWIG_3(String jarg1);
  public final static native long new_sdDate__SWIG_4(long jarg1);
  public final static native void sdDate_setDate__SWIG_0(long jarg1, sdDate jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void sdDate_setDate__SWIG_1(long jarg1, sdDate jarg1_, long jarg2);
  public final static native void sdDate_setYear(long jarg1, sdDate jarg1_, int jarg2);
  public final static native void sdDate_setMonth(long jarg1, sdDate jarg1_, int jarg2);
  public final static native void sdDate_setDay(long jarg1, sdDate jarg1_, int jarg2);
  public final static native void sdDate_setCurrentDate(long jarg1, sdDate jarg1_);
  public final static native void sdDate_getDate(long jarg1, sdDate jarg1_, long jarg2);
  public final static native long sdDate_getDateAsString(long jarg1, sdDate jarg1_);
  public final static native int sdDate_getYear(long jarg1, sdDate jarg1_);
  public final static native int sdDate_getMonth(long jarg1, sdDate jarg1_);
  public final static native int sdDate_getDay(long jarg1, sdDate jarg1_);
  public final static native void delete_sdDate(long jarg1);
  public final static native void sdReport_entity_set(long jarg1, sdReport jarg1_, long jarg2, sdEntityCore jarg2_);
  public final static native long sdReport_entity_get(long jarg1, sdReport jarg1_);
  public final static native void sdReport_eventSet_set(long jarg1, sdReport jarg1_, long jarg2);
  public final static native long sdReport_eventSet_get(long jarg1, sdReport jarg1_);
  public final static native long new_sdReport();
  public final static native void delete_sdReport(long jarg1);
  public final static native long new_sdScene__SWIG_0();
  public final static native long new_sdScene__SWIG_1(long jarg1, sdInfo jarg1_);
  public final static native long new_sdScene__SWIG_2(long jarg1, sdInfo jarg1_, int jarg2);
  public final static native void sdScene_setInfo(long jarg1, sdScene jarg1_, long jarg2, sdInfo jarg2_);
  public final static native long sdScene_getInfo(long jarg1, sdScene jarg1_);
  public final static native int sdScene_getOrdering(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getOrderingAsString(long jarg1, sdScene jarg1_);
  public final static native void sdScene_setOrdering__SWIG_0(long jarg1, sdScene jarg1_, int jarg2);
  public final static native void sdScene_setOrdering__SWIG_1(long jarg1, sdScene jarg1_, long jarg2);
  public final static native long sdScene_getEntityName(long jarg1, sdScene jarg1_, int jarg2);
  public final static native long sdScene_getEntityNames(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getEntity(long jarg1, sdScene jarg1_, long jarg2);
  public final static native long sdScene_getEntityVector(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getNumberOfEntities(long jarg1, sdScene jarg1_);
  public final static native long sdScene_addEntity__SWIG_0(long jarg1, sdScene jarg1_, long jarg2, int jarg3);
  public final static native long sdScene_addEntity__SWIG_1(long jarg1, sdScene jarg1_, long jarg2);
  public final static native void sdScene_removeEntity__SWIG_0(long jarg1, sdScene jarg1_, long jarg2);
  public final static native void sdScene_removeEntity__SWIG_1(long jarg1, sdScene jarg1_, long jarg2, sdEntityCore jarg2_);
  public final static native void sdScene_removeAllEntities(long jarg1, sdScene jarg1_);
  public final static native void sdScene_setValue(long jarg1, sdScene jarg1_, long jarg2, double jarg3, int jarg4, long jarg5);
  public final static native long sdScene_getValue(long jarg1, sdScene jarg1_, long jarg2, double jarg3, int jarg4);
  public final static native int sdScene_getActivatedExtension(long jarg1, sdScene jarg1_, int jarg2);
  public final static native int sdScene_getNumberOfActivatedExtensions(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getActivatedExtensions(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getActivatedExtensionsAsStrings(long jarg1, sdScene jarg1_);
  public final static native void sdScene_addExtension__SWIG_0(long jarg1, sdScene jarg1_, int jarg2);
  public final static native void sdScene_addExtension__SWIG_1(long jarg1, sdScene jarg1_, long jarg2);
  public final static native boolean sdScene_isExtensionActivated__SWIG_0(long jarg1, sdScene jarg1_, int jarg2);
  public final static native boolean sdScene_isExtensionActivated__SWIG_1(long jarg1, sdScene jarg1_, long jarg2);
  public final static native void sdScene_removeExtension__SWIG_0(long jarg1, sdScene jarg1_, int jarg2);
  public final static native void sdScene_removeExtension__SWIG_1(long jarg1, sdScene jarg1_, long jarg2);
  public final static native void sdScene_removeAllExtensions(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getNextEventSetsFromAllEntities(long jarg1, sdScene jarg1_, double jarg2);
  public final static native long sdScene_getPreviousEventSetsFromAllEntities(long jarg1, sdScene jarg1_, double jarg2);
  public final static native long sdScene_getFirstEventSetsFromAllEntities(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getLastEventSetsFromAllEntities(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getEventSetsFromAllEntities__SWIG_0(long jarg1, sdScene jarg1_, double jarg2);
  public final static native long sdScene_getEventSetsFromAllEntities__SWIG_1(long jarg1, sdScene jarg1_, double jarg2, double jarg3);
  public final static native long sdScene_getFirstEventSets(long jarg1, sdScene jarg1_);
  public final static native long sdScene_getNextEventSets(long jarg1, sdScene jarg1_, double jarg2);
  public final static native double sdScene_getNextEventTime(long jarg1, sdScene jarg1_, double jarg2);
  public final static native double sdScene_getDeltaTimeToNextEvent(long jarg1, sdScene jarg1_, double jarg2);
  public final static native long sdScene_dump__SWIG_0(long jarg1, sdScene jarg1_, boolean jarg2);
  public final static native long sdScene_dump__SWIG_1(long jarg1, sdScene jarg1_);
  public final static native void delete_sdScene(long jarg1);
  public final static native boolean sdInterpolation_activateInterpolation__SWIG_1(long jarg1, sdInterpolation jarg1_, int jarg2);
  public final static native boolean sdInterpolation_activateInterpolation__SWIG_2(long jarg1, sdInterpolation jarg1_);
  public final static native boolean sdInterpolation_deactivateInterpolation__SWIG_1(long jarg1, sdInterpolation jarg1_, int jarg2);
  public final static native boolean sdInterpolation_deactivateInterpolation__SWIG_2(long jarg1, sdInterpolation jarg1_);
  public final static native boolean sdInterpolation_isInterpolationActivated(long jarg1, sdInterpolation jarg1_, int jarg2);
  public final static native void delete_sdInterpolation(long jarg1);
  public final static native void delete_sdEvent(long jarg1);
  public final static native void sdEvent_set(long jarg1, sdEvent jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native void sdEvent_setTime__SWIG_0(long jarg1, sdEvent jarg1_, double jarg2);
  public final static native void sdEvent_setTime__SWIG_1(long jarg1, sdEvent jarg1_, long jarg2);
  public final static native double sdEvent_getTime(long jarg1, sdEvent jarg1_);
  public final static native long sdEvent_getTimeAsString(long jarg1, sdEvent jarg1_);
  public final static native boolean sdEvent_setValue__SWIG_0(long jarg1, sdEvent jarg1_, int jarg2, long jarg3);
  public final static native boolean sdEvent_setValue__SWIG_1(long jarg1, sdEvent jarg1_, long jarg2, long jarg3);
  public final static native int sdEvent_getDescriptor(long jarg1, sdEvent jarg1_);
  public final static native long sdEvent_getDescriptorAsString(long jarg1, sdEvent jarg1_);
  public final static native long sdEvent_getValue(long jarg1, sdEvent jarg1_);
  public final static native long sdEvent_getValueAsString(long jarg1, sdEvent jarg1_);
  public final static native long new_sdEventCompare();
  public final static native void delete_sdEventCompare(long jarg1);
  public final static native void delete_sdEntity(long jarg1);
  public final static native int sdEntity_getNumberOfEvents(long jarg1, sdEntity jarg1_);
  public final static native long sdEntity_getEvent(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long sdEntity_getEventSet__SWIG_0(long jarg1, sdEntity jarg1_);
  public final static native long sdEntity_getEventSet__SWIG_1(long jarg1, sdEntity jarg1_, double jarg2);
  public final static native long sdEntity_getEventSet__SWIG_2(long jarg1, sdEntity jarg1_, double jarg2, double jarg3);
  public final static native long sdEntity_getEventSet__SWIG_3(long jarg1, sdEntity jarg1_, double jarg2, double jarg3, int jarg4);
  public final static native long sdEntity_getNextEventSet(long jarg1, sdEntity jarg1_, double jarg2);
  public final static native long sdEntity_getNextEvent(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native double sdEntity_getNextEventTime(long jarg1, sdEntity jarg1_, double jarg2);
  public final static native long sdEntity_getPreviousEvent(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long sdEntity_getPreviousEventSet(long jarg1, sdEntity jarg1_, double jarg2);
  public final static native double sdEntity_getPreviousEventTime(long jarg1, sdEntity jarg1_, double jarg2);
  public final static native long sdEntity_getFirstEvent(long jarg1, sdEntity jarg1_, int jarg2);
  public final static native long sdEntity_getFirstEventSet(long jarg1, sdEntity jarg1_);
  public final static native double sdEntity_getFirstEventTime(long jarg1, sdEntity jarg1_);
  public final static native long sdEntity_getLastEvent(long jarg1, sdEntity jarg1_, int jarg2);
  public final static native long sdEntity_getLastEventSet(long jarg1, sdEntity jarg1_);
  public final static native double sdEntity_getLastEventTime(long jarg1, sdEntity jarg1_);
  public final static native long sdEntity_addEvent__SWIG_0(long jarg1, sdEntity jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native long sdEntity_addEvent__SWIG_1(long jarg1, sdEntity jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void sdEntity_removeEvent__SWIG_0(long jarg1, sdEntity jarg1_, long jarg2, sdEvent jarg2_);
  public final static native void sdEntity_removeEvent__SWIG_1(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native void sdEntity_removeEvent__SWIG_2(long jarg1, sdEntity jarg1_, long jarg2, long jarg3);
  public final static native void sdEntity_removeAllEvents(long jarg1, sdEntity jarg1_);
  public final static native long sdEntity_getValue(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long sdEntity_getValueAsString(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long sdEntity_getNextValue(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long sdEntity_getPreviousValue(long jarg1, sdEntity jarg1_, double jarg2, int jarg3);
  public final static native long new_sdDescriptor(int jarg1, long jarg2, boolean jarg3);
  public final static native int sdDescriptor_getDescriptor(long jarg1, sdDescriptor jarg1_);
  public final static native long sdDescriptor_getDescriptorAsString(long jarg1, sdDescriptor jarg1_);
  public final static native boolean sdDescriptor_getInterpolability(long jarg1, sdDescriptor jarg1_);
  public final static native void delete_sdDescriptor(long jarg1);
  public final static native long getDescriptorAsString(int jarg1, long jarg2, sdDescriptor jarg2_, int jarg3);
  public final static native int getDescriptorAsEnum(long jarg1, long jarg2, sdDescriptor jarg2_, int jarg3);
  public final static native long sdEventCore_numberOfDescriptors_get();
  public final static native long sdEventCore_descriptors_get();
  public final static native void delete_sdEventCore(long jarg1);
  public final static native long sdEventCore_getValueAsString(long jarg1, sdEventCore jarg1_);
  public final static native long sdEventCore_getDescriptorAsString(long jarg1, sdEventCore jarg1_);
  public final static native boolean sdEntityCore_isCoreDescriptor__SWIG_0(int jarg1);
  public final static native boolean sdEntityCore_isCoreDescriptor__SWIG_1(long jarg1);
  public final static native long sdEntityCore_getName(long jarg1, sdEntityCore jarg1_);
  public final static native int sdEntityCore_getKind(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getKindAsString(long jarg1, sdEntityCore jarg1_);
  public final static native int sdEntityCore_getType(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getTypeAsString(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_addEvent__SWIG_0(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native long sdEntityCore_addEvent__SWIG_1(long jarg1, sdEntityCore jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void sdEntityCore_removeEvent__SWIG_0(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native void sdEntityCore_removeEvent__SWIG_1(long jarg1, sdEntityCore jarg1_, long jarg2, long jarg3);
  public final static native int sdEntityCore_getNumberOfEvents(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getEvent(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native long sdEntityCore_getEventSet__SWIG_0(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getEventSet__SWIG_1(long jarg1, sdEntityCore jarg1_, double jarg2);
  public final static native long sdEntityCore_getEventSet__SWIG_2(long jarg1, sdEntityCore jarg1_, double jarg2, double jarg3);
  public final static native long sdEntityCore_getEventSet__SWIG_3(long jarg1, sdEntityCore jarg1_, double jarg2, double jarg3, int jarg4);
  public final static native long sdEntityCore_getNextEvent(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native long sdEntityCore_getNextEventSet(long jarg1, sdEntityCore jarg1_, double jarg2);
  public final static native double sdEntityCore_getNextEventTime(long jarg1, sdEntityCore jarg1_, double jarg2);
  public final static native long sdEntityCore_getPreviousEvent(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native long sdEntityCore_getPreviousEventSet(long jarg1, sdEntityCore jarg1_, double jarg2);
  public final static native double sdEntityCore_getPreviousEventTime(long jarg1, sdEntityCore jarg1_, double jarg2);
  public final static native long sdEntityCore_getFirstEvent(long jarg1, sdEntityCore jarg1_, int jarg2);
  public final static native long sdEntityCore_getFirstEventSet(long jarg1, sdEntityCore jarg1_);
  public final static native double sdEntityCore_getFirstEventTime(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getLastEvent(long jarg1, sdEntityCore jarg1_, int jarg2);
  public final static native long sdEntityCore_getLastEventSet(long jarg1, sdEntityCore jarg1_);
  public final static native double sdEntityCore_getLastEventTime(long jarg1, sdEntityCore jarg1_);
  public final static native long sdEntityCore_getValue(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native long sdEntityCore_getValueAsString(long jarg1, sdEntityCore jarg1_, double jarg2, int jarg3);
  public final static native boolean sdEntityCore_activateInterpolation__SWIG_0(long jarg1, sdEntityCore jarg1_, int jarg2);
  public final static native boolean sdEntityCore_activateInterpolation__SWIG_1(long jarg1, sdEntityCore jarg1_);
  public final static native boolean sdEntityCore_deactivateInterpolation__SWIG_0(long jarg1, sdEntityCore jarg1_, int jarg2);
  public final static native boolean sdEntityCore_deactivateInterpolation__SWIG_1(long jarg1, sdEntityCore jarg1_);
  public final static native boolean sdEntityCore_isInterpolationActivated(long jarg1, sdEntityCore jarg1_, int jarg2);
  public final static native boolean sdEntityCore_sortAlphabetically(long jarg1, sdEntityCore jarg1_, long jarg2, sdEntityCore jarg2_);
  public final static native void delete_sdEntityCore(long jarg1);
  public final static native long sdEntityExtension_getDescriptors();
  public final static native int sdEntityExtension_getExtensionName(long jarg1, sdEntityExtension jarg1_);
  public final static native long sdEntityExtension_getExtensionNameAsString(long jarg1, sdEntityExtension jarg1_);
  public final static native void delete_sdEntityExtension(long jarg1);
  public final static native int sdEntityExtensionMedia_extensionName_get();
  public final static native long sdEntityExtensionMedia_extensionNameAsString_get();
  public final static native long sdEntityExtensionMedia_addEvent__SWIG_0(long jarg1, sdEntityExtensionMedia jarg1_, double jarg2, int jarg3, long jarg4);
  public final static native long sdEntityExtensionMedia_addEvent__SWIG_1(long jarg1, sdEntityExtensionMedia jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void sdEntityExtensionMedia_removeEvent(long jarg1, sdEntityExtensionMedia jarg1_, long jarg2, long jarg3);
  public final static native long sdEntityExtensionMedia_getValueAsString(long jarg1, sdEntityExtensionMedia jarg1_, double jarg2, int jarg3);
  public final static native boolean sdEntityExtensionMedia_activateInterpolation__SWIG_0(long jarg1, sdEntityExtensionMedia jarg1_, int jarg2);
  public final static native boolean sdEntityExtensionMedia_activateInterpolation__SWIG_1(long jarg1, sdEntityExtensionMedia jarg1_);
  public final static native boolean sdEntityExtensionMedia_deactivateInterpolation__SWIG_0(long jarg1, sdEntityExtensionMedia jarg1_, int jarg2);
  public final static native boolean sdEntityExtensionMedia_deactivateInterpolation__SWIG_1(long jarg1, sdEntityExtensionMedia jarg1_);
  public final static native boolean sdEntityExtensionMedia_isInterpolationActivated(long jarg1, sdEntityExtensionMedia jarg1_, int jarg2);
  public final static native int sdEntityExtensionMedia_getExtensionName(long jarg1, sdEntityExtensionMedia jarg1_);
  public final static native long sdEntityExtensionMedia_getExtensionNameAsString(long jarg1, sdEntityExtensionMedia jarg1_);
  public final static native void delete_sdEntityExtensionMedia(long jarg1);
  public final static native long new_sdInfo__SWIG_0();
  public final static native long new_sdInfo__SWIG_1(long jarg1, long jarg2, long jarg3, sdDate jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native long new_sdInfo__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long new_sdInfo__SWIG_3(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native void sdInfo_setAuthor(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_setHost(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_setDate__SWIG_0(long jarg1, sdInfo jarg1_, long jarg2, sdDate jarg2_);
  public final static native void sdInfo_setDate__SWIG_1(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_setSession(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_setLocation(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_setAnnotation(long jarg1, sdInfo jarg1_, long jarg2);
  public final static native void sdInfo_set(long jarg1, sdInfo jarg1_, long jarg2, long jarg3, long jarg4, sdDate jarg4_, long jarg5, long jarg6, long jarg7);
  public final static native long sdInfo_getAuthor(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getHost(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getDate(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getDateAsString(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getSession(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getLocation(long jarg1, sdInfo jarg1_);
  public final static native long sdInfo_getAnnotation(long jarg1, sdInfo jarg1_);
  public final static native void delete_sdInfo(long jarg1);
  public final static native long sdLoader_sceneFromXML(long jarg1);
  public final static native long sdLoader_sceneFromJSON(long jarg1);
  public final static native long sdLoader_sceneFromYAML(long jarg1);
  public final static native long new_sdLoader();
  public final static native void delete_sdLoader(long jarg1);
  public final static native long new_sdOSCResponder__SWIG_0();
  public final static native long new_sdOSCResponder__SWIG_1(long jarg1, sdScene jarg1_);
  public final static native void sdOSCResponder_setScene(long jarg1, sdOSCResponder jarg1_, long jarg2, sdScene jarg2_);
  public final static native long sdOSCResponder_getScene(long jarg1, sdOSCResponder jarg1_);
  public final static native long sdOSCResponder_forwardOSCMessage__SWIG_0(long jarg1, sdOSCResponder jarg1_, long jarg2);
  public final static native long sdOSCResponder_forwardOSCMessage__SWIG_1(long jarg1, sdOSCResponder jarg1_, long jarg2);
  public final static native void sdOSCResponder_setQueryTime(long jarg1, sdOSCResponder jarg1_, double jarg2);
  public final static native void sdOSCResponder_setWriteTime(long jarg1, sdOSCResponder jarg1_, double jarg2);
  public final static native void sdOSCResponder_setInterval(long jarg1, sdOSCResponder jarg1_, double jarg2);
  public final static native double sdOSCResponder_getQueryTime(long jarg1, sdOSCResponder jarg1_);
  public final static native double sdOSCResponder_getWriteTime(long jarg1, sdOSCResponder jarg1_);
  public final static native double sdOSCResponder_getInterval(long jarg1, sdOSCResponder jarg1_);
  public final static native void delete_sdOSCResponder(long jarg1);
  public final static native long sdSaver_XMLFromScene(long jarg1, sdScene jarg1_);
  public final static native long sdSaver_JSONFromScene(long jarg1, sdScene jarg1_);
  public final static native long sdSaver_YAMLFromScene(long jarg1, sdScene jarg1_);
  public final static native long new_sdSaver();
  public final static native void delete_sdSaver(long jarg1);
  public final static native long new_sdGlobalEvent(long jarg1, sdEvent jarg1_, long jarg2, int jarg3);
  public final static native long sdGlobalEvent_getEvent(long jarg1, sdGlobalEvent jarg1_);
  public final static native long sdGlobalEvent_getEntityName(long jarg1, sdGlobalEvent jarg1_);
  public final static native int sdGlobalEvent_getKind(long jarg1, sdGlobalEvent jarg1_);
  public final static native long sdGlobalEvent_getKindAsString(long jarg1, sdGlobalEvent jarg1_);
  public final static native void delete_sdGlobalEvent(long jarg1);
  public final static native long new_sdGlobalEventCompare();
  public final static native void delete_sdGlobalEventCompare(long jarg1);
  public final static native long sdScene_SWIGUpcast(long jarg1);
  public final static native long sdEntity_SWIGUpcast(long jarg1);
  public final static native long sdEventCore_SWIGUpcast(long jarg1);
  public final static native long sdEntityCore_SWIGUpcast(long jarg1);
  public final static native long sdEntityExtension_SWIGUpcast(long jarg1);
  public final static native long sdEntityExtensionMedia_SWIGUpcast(long jarg1);
}
