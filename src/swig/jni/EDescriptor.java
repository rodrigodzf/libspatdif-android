/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package libspatdif;

public final class EDescriptor {
  public final static EDescriptor SD_TYPE = new EDescriptor("SD_TYPE");
  public final static EDescriptor SD_PRESENT = new EDescriptor("SD_PRESENT");
  public final static EDescriptor SD_POSITION = new EDescriptor("SD_POSITION");
  public final static EDescriptor SD_ORIENTATION = new EDescriptor("SD_ORIENTATION");
  public final static EDescriptor SD_MEDIA_ID = new EDescriptor("SD_MEDIA_ID");
  public final static EDescriptor SD_MEDIA_TYPE = new EDescriptor("SD_MEDIA_TYPE");
  public final static EDescriptor SD_MEDIA_LOCATION = new EDescriptor("SD_MEDIA_LOCATION");
  public final static EDescriptor SD_MEDIA_CHANNEL = new EDescriptor("SD_MEDIA_CHANNEL");
  public final static EDescriptor SD_MEDIA_TIME_OFFSET = new EDescriptor("SD_MEDIA_TIME_OFFSET");
  public final static EDescriptor SD_MEDIA_GAIN = new EDescriptor("SD_MEDIA_GAIN");
  public final static EDescriptor SD_SOURCE_WIDTH_WIDTH = new EDescriptor("SD_SOURCE_WIDTH_WIDTH");
  public final static EDescriptor SD_POINT_SET_NAME = new EDescriptor("SD_POINT_SET_NAME");
  public final static EDescriptor SD_ERROR = new EDescriptor("SD_ERROR");
  public final static EDescriptor SD_ALL = new EDescriptor("SD_ALL");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static EDescriptor swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + EDescriptor.class + " with value " + swigValue);
  }

  private EDescriptor(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private EDescriptor(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private EDescriptor(String swigName, EDescriptor swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static EDescriptor[] swigValues = { SD_TYPE, SD_PRESENT, SD_POSITION, SD_ORIENTATION, SD_MEDIA_ID, SD_MEDIA_TYPE, SD_MEDIA_LOCATION, SD_MEDIA_CHANNEL, SD_MEDIA_TIME_OFFSET, SD_MEDIA_GAIN, SD_SOURCE_WIDTH_WIDTH, SD_POINT_SET_NAME, SD_ERROR, SD_ALL };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

